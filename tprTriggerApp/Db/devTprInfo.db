#
# This db file can be loaded into an IOC with or w/o an TPR
# We recommend adding this to each IOC that supports TPRs so
# scripts are able to derive the TPR and trigger info from
# each device's PV prefix.
#
# Required macros:
#	DEV				Device PV prefix
#	TPR_USED		0 = Unused, 1 = Used
#
# Optional macros:
#	TPR_PV			TPR master PV prefix, defaults to $(DEV):NoTpr
#	TPS_PV			TPR slave  PV prefix, defaults to $(DEV):NoTpr
#	TPR_CH			TPR channel number, defaults to 0
#	TPR_TR			TPR trigger number, defaults to 0
#
# It adds 3 new PVs for each device
#	$(DEV):TPR_PV		PV prefix for this device's master TPR
#	$(DEV):TPS_PV		PV prefix for this device's slave  TPR
#	$(DEV):TPR_CH		TPR Channel number for this device
#	$(DEV):TPR_TR		TPR Trigger number for this device
#
# It also adds a new record, TprUsed with required macro
#	$(TPS_PV):TprUsed	bo record: 0 = Unused, 1 = Used
#
# The other record provides a minimal subset of records that
# are compatible w/ their equivalent tprTrigger module records
# to allow edm screens to work properly with or without an TPR
#	$(TPS_PV):RXLNKSTATUS
#
# Usage for devices with an TPR:
#	Just add this line to your st.cmd file with appropriate definitions for DEV, TPR_PV, and TPR_CH
#	You can load it before or after your evr db files, and can load one instance per device.
# dbLoadRecords( "db/devTprInfo.db", "DEV=$(DEV),TPR_PV=$(TPR_PV),TPS_PV=$(TPS_PV),TPR_CH=$(TPR_CH),TPR_USED=1 )
#
# If your IOC supports some devices with TPRs and some without, follow the above usage
# for devices with TPRs.   For devices without TPRs you can just load this. 
# dbLoadRecords( "db/devTprInfo.db", "DEV=$(DEV),TPR_USED=0 )
#
# This allows your edm screens to use group visibility to hide or show our traditional
# green diamond RXLINKSTATUS widget without getting white unconnected widget outlines
# for the hidden RXLINKSTATUS widget for device screens w/ no TPR
# Your edm screen should define the TPR macro as $(DEV):NoTpr or you can use your desired TPR_PV value.
#

record( stringout, "$(DEV):TPR_PV" )
{
	field( PINI, "YES" )
	field( VAL, "$(TPR_PV=$(DEV):NoTpr)" )
}

record( stringout, "$(DEV):TPS_PV" )
{
	field( PINI, "YES" )
	field( VAL, "$(TPS_PV=$(DEV):NoTpr)" )
}

record( longout, "$(DEV):TPR_CH" )
{
	field( PINI, "YES" )
	field( VAL, "$(TPR_CH=0)" )
}

record( longout, "$(DEV):TPR_TR" )
{
	field( PINI, "YES" )
	field( VAL, "$(TPR_TR=0)" )
}

record( bo, "$(TPS_PV=$(DEV):NoTpr):TprUsed" )
{
	field( PINI, "YES" )
	field( ZNAM, "Unused" )
	field( ONAM, "Used" )
	field( DOL,  "$(TPR_USED)" )
}

# Must match RXLNKSTATUS from tprTrigger module pcieSlave_tprTrig.db
record(mbbi, "$(TPS_PV):RXLNKSTATUS")
{
  field(PINI, "YES")
  field(INP,  "$(TPR_PV):RXLNKSTATUS CP NMS")
  field(ZRVL, "0")
  field(ZRST, "Link Down")
  field(ZRSV, "MAJOR")
  field(ONVL, "1")
  field(ONST, "Link Up")
}

